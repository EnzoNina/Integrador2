@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

class ApplicationConfig {
  + ApplicationConfig(IUsuarioService): 
  - usuarioService: IUsuarioService
  + passwordEncoder(): BCryptPasswordEncoder
  + authenticationProvider(): AuthenticationProvider
  + authenticationManager(AuthenticationConfiguration): AuthenticationManager
  + userDetailsService(): UserDetailsService
}
class Banco {
  + Banco(): 
  - swift: String
  - id: Integer
  - sitioWeb: String
  - telefono: String
  - nombre: String
  + getId(): Integer
  + getNombre(): String
  + getSwift(): String
  + getTelefono(): String
  + getSitioWeb(): String
  + setId(Integer): void
  + setNombre(String): void
  + setSwift(String): void
  + setTelefono(String): void
  + setSitioWeb(String): void
}
class Categoria {
  + Categoria(): 
  - descripcion: String
  - idTipoTra: TipoTransaccion
  - id: Integer
  + getId(): Integer
  + getIdTipoTra(): TipoTransaccion
  + getDescripcion(): String
  + setId(Integer): void
  + setIdTipoTra(TipoTransaccion): void
  + setDescripcion(String): void
}
class Cuenta {
  + Cuenta(): 
  - id: Integer
  - banco: Banco
  - numTarjeta: String
  - usuario: Usuario
  - numCuentaInterbancario: String
  - numCuenta: String
  - tipoTarjeta: TipoTarjeta
  - tipoCuenta: TipoCuenta
  + getId(): Integer
  + getUsuario(): Usuario
  + getBanco(): Banco
  + getNumCuenta(): String
  + getNumCuentaInterbancario(): String
  + setNumCuenta(String): void
  + setNumCuentaInterbancario(String): void
  + setBanco(Banco): void
  + getTipoCuenta(): TipoCuenta
  + getNumTarjeta(): String
  + setTipoTarjeta(TipoTarjeta): void
  + getTipoTarjeta(): TipoTarjeta
  + setNumTarjeta(String): void
  + setId(Integer): void
  + setTipoCuenta(TipoCuenta): void
  + setUsuario(Usuario): void
}
class CustomAccessDeniedHandle {
  + CustomAccessDeniedHandle(): 
  + handle(HttpServletRequest, HttpServletResponse, AccessDeniedException): void
}
class Divisa {
  + Divisa(): 
  - id: Integer
  - simbolo: String
  - codigo: String
  - nombre: String
  + getId(): Integer
  + getCodigo(): String
  + getNombre(): String
  + getSimbolo(): String
  + setId(Integer): void
  + setCodigo(String): void
  + setNombre(String): void
  + setSimbolo(String): void
}
class FinanzasApplication {
  + FinanzasApplication(): 
  + main(String[]): void
}
class FirmaException {
  + FirmaException(String): 
}
class Frecuencia {
  + Frecuencia(): 
  - id: Integer
  - descripcion: String
  + getId(): Integer
  + getDescripcion(): String
  + setId(Integer): void
  + setDescripcion(String): void
}
class GlobalExceptionHandler {
  + GlobalExceptionHandler(): 
  - response: Map<String, Object>
  - getMapResponseEntity(String): ResponseEntity<Map<String, Object>>
  + handleNoTokenJwtException(NoTokenJwtException): ResponseEntity<Map<String, Object>>
  + handleTokenExpiradoException(TokenExpiradoException): ResponseEntity<Map<String, Object>>
  + handleFirmaException(FirmaException): ResponseEntity<Map<String, Object>>
}
class NoTokenJwtException {
  + NoTokenJwtException(String): 
}
class ResumenTransacciones {
  + ResumenTransacciones(): 
  - periodo: String
  - totalIngresos: BigDecimal
  - transacciones: Map<String, Object>
  - totalDeuda: BigDecimal
  - totalAhorro: BigDecimal
  - totalEgresos: BigDecimal
  - idUsuario: Usuario
  - id: Integer
  - fechaCreacion: LocalDate
  + getId(): Integer
  + getIdUsuario(): Usuario
  + setTotalEgresos(BigDecimal): void
  + getPeriodo(): String
  + getTransacciones(): Map<String, Object>
  + setIdUsuario(Usuario): void
  + setPeriodo(String): void
  + setTotalAhorro(BigDecimal): void
  + setTotalDeuda(BigDecimal): void
  + setFechaCreacion(LocalDate): void
  + getTotalIngresos(): BigDecimal
  + setTransacciones(Map<String, Object>): void
  + getTotalEgresos(): BigDecimal
  + getTotalAhorro(): BigDecimal
  + getTotalDeuda(): BigDecimal
  + getFechaCreacion(): LocalDate
  + setId(Integer): void
  + setTotalIngresos(BigDecimal): void
}
class SecurityConfig {
  + SecurityConfig(JwtAuthenticationFilter, AuthenticationProvider): 
  - authProvider: AuthenticationProvider
  - jwtAuthenticationFilter: JwtAuthenticationFilter
  + accessDeniedHandler(): AccessDeniedHandler
  ~ corsConfigurationSource(): CorsConfiguration
  + securityFilterChain(HttpSecurity): SecurityFilterChain
}
class Sesiones {
  + Sesiones(): 
  - token: String
  - id: Integer
  - usuario: Usuario
  + getId(): Integer
  + getUsuario(): Usuario
  + getToken(): String
  + setId(Integer): void
  + setUsuario(Usuario): void
  + setToken(String): void
}
class TipoConcepto {
  + TipoConcepto(): 
  - descripcion: String
  - id: Integer
  + getId(): Integer
  + getDescripcion(): String
  + setId(Integer): void
  + setDescripcion(String): void
}
class TipoCuenta {
  + TipoCuenta(): 
  - id: Integer
  - descripcion: String
  + getId(): Integer
  + getDescripcion(): String
  + setId(Integer): void
  + setDescripcion(String): void
}
class TipoTarjeta {
  + TipoTarjeta(): 
  - id: Integer
  - descripcion: String
  + getId(): Integer
  + getDescripcion(): String
  + setId(Integer): void
  + setDescripcion(String): void
}
class TipoTransaccion {
  + TipoTransaccion(): 
  - descripcion: String
  - id: Integer
  + getId(): Integer
  + getDescripcion(): String
  + setId(Integer): void
  + setDescripcion(String): void
}
class TokenExpiradoException {
  + TokenExpiradoException(String): 
}
interface TransaccionRepository << interface >>
class Transacciones {
  + Transacciones(Integer, Usuario, Categoria, TipoTransaccion, TipoConcepto, Frecuencia, BigDecimal, Divisa, String, LocalDate): 
  + Transacciones(): 
  - divisa: Divisa
  - descripcion: String
  - idUsuario: Usuario
  - idCategoria: Categoria
  - fechaTransaccion: LocalDate
  - id: Integer
  - idTipoTra: TipoTransaccion
  - monto: BigDecimal
  - idConcepto: TipoConcepto
  - idFrecuencia: Frecuencia
  + getIdConcepto(): TipoConcepto
  + builder(): TransaccionesBuilder
  + setMonto(BigDecimal): void
  + setIdUsuario(Usuario): void
  + getId(): Integer
  + getIdUsuario(): Usuario
  + getIdCategoria(): Categoria
  + getIdTipoTra(): TipoTransaccion
  + setIdFrecuencia(Frecuencia): void
  + setDivisa(Divisa): void
  + getFechaTransaccion(): LocalDate
  + setDescripcion(String): void
  + setFechaTransaccion(LocalDate): void
  + setIdConcepto(TipoConcepto): void
  + getIdFrecuencia(): Frecuencia
  + setIdTipoTra(TipoTransaccion): void
  + getDescripcion(): String
  + getMonto(): BigDecimal
  + getDivisa(): Divisa
  + setIdCategoria(Categoria): void
  + setId(Integer): void
}
class TransaccionesBuilder {
  ~ TransaccionesBuilder(): 
  - idFrecuencia: Frecuencia
  - idCategoria: Categoria
  - id: Integer
  - idConcepto: TipoConcepto
  - idTipoTra: TipoTransaccion
  - monto: BigDecimal
  - descripcion: String
  - divisa: Divisa
  - idUsuario: Usuario
  - fechaTransaccion: LocalDate
  + id(Integer): TransaccionesBuilder
  + idUsuario(Usuario): TransaccionesBuilder
  + build(): Transacciones
  + idCategoria(Categoria): TransaccionesBuilder
  + idTipoTra(TipoTransaccion): TransaccionesBuilder
  + idConcepto(TipoConcepto): TransaccionesBuilder
  + idFrecuencia(Frecuencia): TransaccionesBuilder
  + monto(BigDecimal): TransaccionesBuilder
  + divisa(Divisa): TransaccionesBuilder
  + descripcion(String): TransaccionesBuilder
  + toString(): String
  + fechaTransaccion(LocalDate): TransaccionesBuilder
}
class Usuario {
  + Usuario(): 
  - apellidom: String
  - id: Integer
  - nombres: String
  - email: String
  - apellidop: String
  - password: String
  + getNombres(): String
  + getId(): Integer
  + getApellidop(): String
  + getApellidom(): String
  + getEmail(): String
  + getPassword(): String
  + setId(Integer): void
  + setNombres(String): void
  + setApellidop(String): void
  + setApellidom(String): void
  + setEmail(String): void
  + setPassword(String): void
  + isEnabled(): boolean
  + isAccountNonExpired(): boolean
  + getUsername(): String
  + getAuthorities(): Collection<GrantedAuthority>
  + isCredentialsNonExpired(): boolean
  + isAccountNonLocked(): boolean
}
interface UsuarioRepository << interface >> {
  + findByUsername(String): Optional<Usuario>
}
class node6 as "package  utp.edu.codekion.finanzas.config.filter" << package >>
class node2 as "package  utp.edu.codekion.finanzas.service.IService" << package >>
class node16 as "package  utp.edu.codekion.finanzas.service.impl" << package >>

ApplicationConfig         -[#595959,dashed]->  ApplicationConfig        
Categoria                "1" *-[#595959,plain]-> "idTipoTra\n1" TipoTransaccion          
Cuenta                   "1" *-[#595959,plain]-> "banco\n1" Banco                    
Cuenta                   "1" *-[#595959,plain]-> "tipoCuenta\n1" TipoCuenta               
Cuenta                   "1" *-[#595959,plain]-> "tipoTarjeta\n1" TipoTarjeta              
Cuenta                   "1" *-[#595959,plain]-> "usuario\n1" Usuario                  
FinanzasApplication       -[#595959,dashed]->  FinanzasApplication      
GlobalExceptionHandler    -[#595959,dashed]->  FirmaException           
GlobalExceptionHandler    -[#595959,dashed]->  GlobalExceptionHandler   
GlobalExceptionHandler    -[#595959,dashed]->  NoTokenJwtException      
GlobalExceptionHandler    -[#595959,dashed]->  TokenExpiradoException   
ResumenTransacciones     "1" *-[#595959,plain]-> "idUsuario\n1" Usuario                  
SecurityConfig            -[#595959,dashed]->  CustomAccessDeniedHandle : "«create»"
SecurityConfig            -[#595959,dashed]->  SecurityConfig           
Sesiones                 "1" *-[#595959,plain]-> "usuario\n1" Usuario                  
TransaccionRepository     -[#595959,dashed]->  Transacciones            
Transacciones            "1" *-[#595959,plain]-> "idCategoria\n1" Categoria                
Transacciones            "1" *-[#595959,plain]-> "divisa\n1" Divisa                   
Transacciones            "1" *-[#595959,plain]-> "idFrecuencia\n1" Frecuencia               
Transacciones            "1" *-[#595959,plain]-> "idConcepto\n1" TipoConcepto             
Transacciones            "1" *-[#595959,plain]-> "idTipoTra\n1" TipoTransaccion          
Transacciones            "1" *-[#595959,plain]-> "idUsuario\n1" Usuario                  
TransaccionesBuilder      +-[#820000,plain]-  Transacciones            
UsuarioRepository         -[#595959,dashed]->  Usuario                  
@enduml
